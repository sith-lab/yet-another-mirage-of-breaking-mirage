# Use an Ubuntu base image
FROM ubuntu:20.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive

# Install required dependencies
RUN apt-get update && apt-get install -y \
    software-properties-common \
    wget \
    build-essential \
    python3 \
    python3-pip \
    python2 \
    curl \
    && apt-get clean

# Other gem5 dependencies
RUN apt-get install -y \
    apt-utils g++ python python-dev scons emacs cmake \
    zlib1g-dev m4 mercurial swig libgoogle-perftools-dev libboost-all-dev \
    git

# Get python2
RUN update-alternatives --install /usr/bin/python python /usr/bin/python2 1

# Install SCons 3.1.2
WORKDIR /tmp
RUN wget -O scons-3.1.2.tar.gz "https://downloads.sourceforge.net/project/scons/scons/3.1.2/scons-3.1.2.tar.gz?use_mirror=autoselect" && \
    tar -zxvf scons-3.1.2.tar.gz && \
            cd scons-3.1.2 && \
	    python setup.py install && \
	    cd .. && \
	    rm -rf scons-3.1.2 scons-3.1.2.tar.gz
		    

# Install Pip and six
RUN wget https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
    python get-pip.py

RUN python -m pip install six   # For Python 2
RUN python3 -m pip install numpy scipy matplotlib pandas # For Python 3

# Set working directory
WORKDIR /code

# compile mirage
WORKDIR /code/mirage/perf_analysis/gem5/
CMD scons -j50 build/X86/gem5.opt; cd /code ; ./reproduction/run_scripts/run_aessetup.sh ; export SPEC_PATH=/code; export BASE_DIR=/code ; cd /code/reproduction/run_scripts; /bin/bash
#CMD scons -j50 build/X86/gem5.opt; cd /code ; ./reproduction/run_scripts/run_aessetup.sh ;   export SPEC_PATH=/code; export BASE_DIR=/code ; cd /code/reproduction/run_scripts; ./run_exp_all.sh ; /bin/bash